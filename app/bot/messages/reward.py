from uuid import UUID
from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.filters.callback_data import CallbackData


from application.dto.rewards import RewardDTO
from application.dto.user import UserDTO
from bot.messages.base import BaseMessageBuilder


class ReceiveRewardCallback(CallbackData, prefix="receive_reward"):
    reward_id: UUID



class RewardMessage(BaseMessageBuilder):
    _text = ""
    _reply_markup = ...

    def build(self, user: UserDTO, rewards: list[RewardDTO] | None):
        url = f"https://t.me/forgot_vpn_bot?start={user.id}"
        self._text = (
            "‚ïî‚ïê üëë –ë–û–ù–£–°–ù–ê–Ø –°–ò–°–¢–ï–ú–ê üëë ‚ïê‚ïó\n"
            "\n"
            "üìä –í–ê–®–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ê:\n"
            f"‚îî‚îÄ üë• –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: {user.referrals_count}\n"
            "\n"
            "üåü –ë–û–ù–£–°–ù–ê–Ø –ü–†–û–ì–†–ê–ú–ú–ê:\n"
            "‚îú‚îÄ üéØ –ó–∞ –∫–∞–∂–¥—ã–µ 10 –¥—Ä—É–∑–µ–π = –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 7*–∫–æ–ª-–≤–æ –¥–µ—Å—è—Ç–∫–æ–≤ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö)\n"
            "‚îî‚îÄ üì¶ –¢–∞–∫ –∂–µ –∑–∞ –ø–æ–∫—É–ø–∫—É —Å–≤–æ–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É —Å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é 10% –æ—Ç –µ–≥–æ\n"
            "\n"
            "üîó –í–ê–®–ê –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–°–´–õ–ö–ê:\n"
            f"‚îî‚îÄ {url}\n"
        )

        inline_keyboard=InlineKeyboardBuilder()
        inline_keyboard.add(
            InlineKeyboardButton(
                text='–ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–≥–∞ –∏ –ø–æ–ª—É—á–∏ –±–æ–Ω—É—Å',
                switch_inline_query="üîí –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏ –±—ã—Å—Ç—Ä—ã–π VPN! –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –ø–æ –º–æ–µ–π —Å—Å—ã–ª–∫–µ: " + url
            )
        )

        if rewards is None:
            rewards = list()

        for reward in rewards:
            # self._text += (

            # )
            inline_keyboard.add(
                InlineKeyboardButton(
                    text=f"{reward.name}",
                    callback_data=ReceiveRewardCallback(reward_id=reward.id).pack()
                )
            )

        self._reply_markup = inline_keyboard.as_markup()

        content = {
            "text": self._text,
            "reply_markup": self._reply_markup
        }

        return content
